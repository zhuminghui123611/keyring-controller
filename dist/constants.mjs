export var KeyringControllerError;
(function (KeyringControllerError) {
    KeyringControllerError["NoKeyring"] = "KeyringController - No keyring found";
    KeyringControllerError["KeyringNotFound"] = "KeyringController - Keyring not found.";
    KeyringControllerError["UnsafeDirectKeyringAccess"] = "KeyringController - Returning keyring instances is unsafe";
    KeyringControllerError["WrongPasswordType"] = "KeyringController - Password must be of type string.";
    KeyringControllerError["InvalidEmptyPassword"] = "KeyringController - Password cannot be empty.";
    KeyringControllerError["NoFirstAccount"] = "KeyringController - First Account not found.";
    KeyringControllerError["DuplicatedAccount"] = "KeyringController - The account you are trying to import is a duplicate";
    KeyringControllerError["VaultError"] = "KeyringController - Cannot unlock without a previous vault.";
    KeyringControllerError["VaultDataError"] = "KeyringController - The decrypted vault has an unexpected shape.";
    KeyringControllerError["UnsupportedEncryptionKeyExport"] = "KeyringController - The encryptor does not support encryption key export.";
    KeyringControllerError["UnsupportedGenerateRandomMnemonic"] = "KeyringController - The current keyring does not support the method generateRandomMnemonic.";
    KeyringControllerError["UnsupportedExportAccount"] = "`KeyringController - The keyring for the current address does not support the method exportAccount";
    KeyringControllerError["UnsupportedRemoveAccount"] = "`KeyringController - The keyring for the current address does not support the method removeAccount";
    KeyringControllerError["UnsupportedSignTransaction"] = "KeyringController - The keyring for the current address does not support the method signTransaction.";
    KeyringControllerError["UnsupportedSignMessage"] = "KeyringController - The keyring for the current address does not support the method signMessage.";
    KeyringControllerError["UnsupportedSignPersonalMessage"] = "KeyringController - The keyring for the current address does not support the method signPersonalMessage.";
    KeyringControllerError["UnsupportedSignEip7702Authorization"] = "KeyringController - The keyring for the current address does not support the method signEip7702Authorization.";
    KeyringControllerError["UnsupportedGetEncryptionPublicKey"] = "KeyringController - The keyring for the current address does not support the method getEncryptionPublicKey.";
    KeyringControllerError["UnsupportedDecryptMessage"] = "KeyringController - The keyring for the current address does not support the method decryptMessage.";
    KeyringControllerError["UnsupportedSignTypedMessage"] = "KeyringController - The keyring for the current address does not support the method signTypedMessage.";
    KeyringControllerError["UnsupportedGetAppKeyAddress"] = "KeyringController - The keyring for the current address does not support the method getAppKeyAddress.";
    KeyringControllerError["UnsupportedExportAppKeyForAddress"] = "KeyringController - The keyring for the current address does not support the method exportAppKeyForAddress.";
    KeyringControllerError["UnsupportedPrepareUserOperation"] = "KeyringController - The keyring for the current address does not support the method prepareUserOperation.";
    KeyringControllerError["UnsupportedPatchUserOperation"] = "KeyringController - The keyring for the current address does not support the method patchUserOperation.";
    KeyringControllerError["UnsupportedSignUserOperation"] = "KeyringController - The keyring for the current address does not support the method signUserOperation.";
    KeyringControllerError["UnsupportedVerifySeedPhrase"] = "KeyringController - The keyring does not support the method verifySeedPhrase.";
    KeyringControllerError["MissingEip7702AuthorizationContractAddress"] = "KeyringController - The EIP-7702 Authorization is invalid. No contract address provided.";
    KeyringControllerError["NoAccountOnKeychain"] = "KeyringController - The keychain doesn't have accounts.";
    KeyringControllerError["ControllerLocked"] = "KeyringController - The operation cannot be completed while the controller is locked.";
    KeyringControllerError["MissingCredentials"] = "KeyringController - Cannot persist vault without password and encryption key";
    KeyringControllerError["MissingVaultData"] = "KeyringController - Cannot persist vault without vault information";
    KeyringControllerError["ExpiredCredentials"] = "KeyringController - Encryption key and salt provided are expired";
    KeyringControllerError["NoKeyringBuilder"] = "KeyringController - No keyringBuilder found for keyring";
    KeyringControllerError["DataType"] = "KeyringController - Incorrect data type provided";
    KeyringControllerError["NoHdKeyring"] = "KeyringController - No HD Keyring found";
    KeyringControllerError["ControllerLockRequired"] = "KeyringController - attempt to update vault during a non mutually exclusive operation";
    KeyringControllerError["LastAccountInPrimaryKeyring"] = "KeyringController - Last account in primary keyring cannot be removed";
    KeyringControllerError["EncryptionKeyNotSet"] = "KeyringController - Encryption key not set";
})(KeyringControllerError || (KeyringControllerError = {}));
//# sourceMappingURL=constants.mjs.map