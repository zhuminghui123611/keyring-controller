{"version":3,"file":"pagination.cjs","sourceRoot":"","sources":["../../src/api/pagination.ts"],"names":[],"mappings":";;;AAAA,2DAAgE;AAEhE,uDAAiE;AAEjE;;;;;;;;;;;GAWG;AACU,QAAA,gBAAgB,GAAG,IAAA,sBAAM,EAAC;IACrC;;OAEG;IACH,KAAK,EAAE,IAAA,oBAAM,GAAE;IAEf;;OAEG;IACH,IAAI,EAAE,IAAA,6BAAa,EAAC,IAAA,sBAAQ,EAAC,IAAA,oBAAM,GAAE,CAAC,CAAC;CACxC,CAAC,CAAC","sourcesContent":["import { exactOptional, object } from '@metamask/keyring-utils';\nimport type { Infer } from '@metamask/superstruct';\nimport { nullable, number, string } from '@metamask/superstruct';\n\n/**\n * Pagination struct. This struct is used to specify the limit of items to\n * return and the next cursor to iterate over the results.\n *\n * @example\n * ```ts\n * {\n *   limit: 10,\n *   next: 'c3y1Q6QtqtstbxKX+oqVdEW6',\n * }\n * ```\n */\nexport const PaginationStruct = object({\n  /**\n   * Maximum number of items to return.\n   */\n  limit: number(),\n\n  /**\n   * Next cursor to iterate over the results.\n   */\n  next: exactOptional(nullable(string())),\n});\n\n/**\n * Pagination object.\n *\n * See {@link PaginationStruct}.\n */\nexport type Pagination = Infer<typeof PaginationStruct>;\n\n/**\n * Page of results. It includes the data and the next cursor to iterate over\n * the results.\n *\n * @example\n * ```ts\n * {\n *   data: [\n *     {\n *       // Item object\n *     }\n *   ],\n *   next: 'c3y1Q6QtqtstbxKX+oqVdEW6',\n * }\n * ```\n */\nexport type Paginated<Type> = {\n  /**\n   * The list of items for this page.\n   */\n  data: Type[];\n\n  /**\n   * Next cursor to iterate over the results if any, will be `null` otherwise.\n   */\n  next: string | null;\n};\n"]}