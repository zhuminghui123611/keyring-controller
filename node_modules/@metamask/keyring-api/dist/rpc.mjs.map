{"version":3,"file":"rpc.mjs","sourceRoot":"","sources":["../src/rpc.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  object,\n  UuidStruct,\n  JsonRpcRequestStruct,\n} from '@metamask/keyring-utils';\nimport type { Infer } from '@metamask/superstruct';\nimport {\n  array,\n  literal,\n  nullable,\n  number,\n  record,\n  string,\n  union,\n} from '@metamask/superstruct';\nimport { JsonStruct } from '@metamask/utils';\n\nimport {\n  CaipAssetTypeStruct,\n  CaipAssetTypeOrIdStruct,\n  CaipChainIdStruct,\n  BalanceStruct,\n  KeyringAccountDataStruct,\n  KeyringAccountStruct,\n  KeyringRequestStruct,\n  KeyringResponseStruct,\n  TransactionsPageStruct,\n  PaginationStruct,\n  CaipAccountIdStruct,\n  DiscoveredAccountStruct,\n} from './api';\n\n/**\n * Keyring RPC methods used by the API.\n */\nexport enum KeyringRpcMethod {\n  ListAccounts = 'keyring_listAccounts',\n  GetAccount = 'keyring_getAccount',\n  CreateAccount = 'keyring_createAccount',\n  DiscoverAccounts = 'keyring_discoverAccounts',\n  ListAccountAssets = 'keyring_listAccountAssets',\n  ListAccountTransactions = 'keyring_listAccountTransactions',\n  GetAccountBalances = 'keyring_getAccountBalances',\n  ResolveAccountAddress = 'keyring_resolveAccountAddress',\n  FilterAccountChains = 'keyring_filterAccountChains',\n  UpdateAccount = 'keyring_updateAccount',\n  DeleteAccount = 'keyring_deleteAccount',\n  ExportAccount = 'keyring_exportAccount',\n  ListRequests = 'keyring_listRequests',\n  GetRequest = 'keyring_getRequest',\n  SubmitRequest = 'keyring_submitRequest',\n  ApproveRequest = 'keyring_approveRequest',\n  RejectRequest = 'keyring_rejectRequest',\n}\n\n/**\n * Check if a method is a keyring RPC method.\n *\n * @param method - Method to check.\n * @returns Whether the method is a keyring RPC method.\n */\nexport function isKeyringRpcMethod(method: string): boolean {\n  return Object.values(KeyringRpcMethod).includes(method as KeyringRpcMethod);\n}\n\n// ----------------------------------------------------------------------------\n\nconst CommonHeader = {\n  jsonrpc: literal('2.0'),\n  id: union([string(), number(), literal(null)]),\n};\n\n// ----------------------------------------------------------------------------\n// List accounts\n\nexport const ListAccountsRequestStruct = object({\n  ...CommonHeader,\n  method: literal('keyring_listAccounts'),\n});\n\nexport type ListAccountsRequest = Infer<typeof ListAccountsRequestStruct>;\n\nexport const ListAccountsResponseStruct = array(KeyringAccountStruct);\n\nexport type ListAccountsResponse = Infer<typeof ListAccountsResponseStruct>;\n\n// ----------------------------------------------------------------------------\n// Get account\n\nexport const GetAccountRequestStruct = object({\n  ...CommonHeader,\n  method: literal('keyring_getAccount'),\n  params: object({\n    id: UuidStruct,\n  }),\n});\n\nexport type GetAccountRequest = Infer<typeof GetAccountRequestStruct>;\n\nexport const GetAccountResponseStruct = KeyringAccountStruct;\n\nexport type GetAccountResponse = Infer<typeof GetAccountResponseStruct>;\n\n// ----------------------------------------------------------------------------\n// Create account\n\nexport const CreateAccountRequestStruct = object({\n  ...CommonHeader,\n  method: literal('keyring_createAccount'),\n  params: object({\n    options: record(string(), JsonStruct),\n  }),\n});\n\nexport type CreateAccountRequest = Infer<typeof CreateAccountRequestStruct>;\n\nexport const CreateAccountResponseStruct = KeyringAccountStruct;\n\nexport type CreateAccountResponse = Infer<typeof CreateAccountResponseStruct>;\n\n// ----------------------------------------------------------------------------\n// Discover accounts\n\nexport const DiscoverAccountsRequestStruct = object({\n  ...CommonHeader,\n  method: literal('keyring_discoverAccounts'),\n  params: object({\n    scopes: array(CaipChainIdStruct),\n    entropySource: string(),\n    groupIndex: number(),\n  }),\n});\n\nexport type DiscoverAccountsRequest = Infer<\n  typeof DiscoverAccountsRequestStruct\n>;\n\nexport const DiscoverAccountsResponseStruct = array(DiscoveredAccountStruct);\n\nexport type DiscoverAccountsResponse = Infer<\n  typeof DiscoverAccountsResponseStruct\n>;\n\n// ----------------------------------------------------------------------------\n// List account transactions\n\nexport const ListAccountTransactionsRequestStruct = object({\n  ...CommonHeader,\n  method: literal('keyring_listAccountTransactions'),\n  params: object({\n    id: UuidStruct,\n    pagination: PaginationStruct,\n  }),\n});\n\nexport type ListAccountTransactionsRequest = Infer<\n  typeof ListAccountTransactionsRequestStruct\n>;\n\nexport const ListAccountTransactionsResponseStruct = TransactionsPageStruct;\n\nexport type ListAccountTransactionsResponse = Infer<\n  typeof ListAccountTransactionsResponseStruct\n>;\n\n// ----------------------------------------------------------------------------\n// List account assets\n\nexport const ListAccountAssetsRequestStruct = object({\n  ...CommonHeader,\n  method: literal('keyring_listAccountAssets'),\n  params: object({\n    id: UuidStruct,\n  }),\n});\n\nexport type ListAccountAssetsRequest = Infer<\n  typeof ListAccountAssetsRequestStruct\n>;\n\nexport const ListAccountAssetsResponseStruct = array(CaipAssetTypeOrIdStruct);\n\nexport type ListAccountAssetsResponse = Infer<\n  typeof ListAccountAssetsResponseStruct\n>;\n\n// ----------------------------------------------------------------------------\n// Get account balances\n\nexport const GetAccountBalancesRequestStruct = object({\n  ...CommonHeader,\n  method: literal(`${KeyringRpcMethod.GetAccountBalances}`),\n  params: object({\n    id: UuidStruct,\n    assets: array(CaipAssetTypeStruct),\n  }),\n});\n\nexport type GetAccountBalancesRequest = Infer<\n  typeof GetAccountBalancesRequestStruct\n>;\n\nexport const GetAccountBalancesResponseStruct = record(\n  CaipAssetTypeStruct,\n  BalanceStruct,\n);\n\nexport type GetAccountBalancesResponse = Infer<\n  typeof GetAccountBalancesResponseStruct\n>;\n\n// ----------------------------------------------------------------------------\n// Resolve account address\n\nexport const ResolveAccountAddressRequestStruct = object({\n  ...CommonHeader,\n  method: literal('keyring_resolveAccountAddress'),\n  params: object({\n    scope: CaipChainIdStruct,\n    request: JsonRpcRequestStruct,\n  }),\n});\n\nexport type ResolveAccountAddressRequest = Infer<\n  typeof ResolveAccountAddressRequestStruct\n>;\n\nexport const ResolveAccountAddressResponseStruct = nullable(\n  object({\n    address: CaipAccountIdStruct,\n  }),\n);\n\nexport type ResolveAccountAddressResponse = Infer<\n  typeof ResolveAccountAddressResponseStruct\n>;\n\n// ----------------------------------------------------------------------------\n// Filter account chains\n\nexport const FilterAccountChainsStruct = object({\n  ...CommonHeader,\n  method: literal('keyring_filterAccountChains'),\n  params: object({\n    id: UuidStruct,\n    chains: array(string()),\n  }),\n});\n\nexport type FilterAccountChainsRequest = Infer<\n  typeof FilterAccountChainsStruct\n>;\n\nexport const FilterAccountChainsResponseStruct = array(string());\n\nexport type FilterAccountChainsResponse = Infer<\n  typeof FilterAccountChainsResponseStruct\n>;\n\n// ----------------------------------------------------------------------------\n// Update account\n\nexport const UpdateAccountRequestStruct = object({\n  ...CommonHeader,\n  method: literal('keyring_updateAccount'),\n  params: object({\n    account: KeyringAccountStruct,\n  }),\n});\n\nexport type UpdateAccountRequest = Infer<typeof UpdateAccountRequestStruct>;\n\nexport const UpdateAccountResponseStruct = literal(null);\n\nexport type UpdateAccountResponse = Infer<typeof UpdateAccountResponseStruct>;\n\n// ----------------------------------------------------------------------------\n// Delete account\n\nexport const DeleteAccountRequestStruct = object({\n  ...CommonHeader,\n  method: literal('keyring_deleteAccount'),\n  params: object({\n    id: UuidStruct,\n  }),\n});\n\nexport type DeleteAccountRequest = Infer<typeof DeleteAccountRequestStruct>;\n\nexport const DeleteAccountResponseStruct = literal(null);\n\nexport type DeleteAccountResponse = Infer<typeof DeleteAccountResponseStruct>;\n\n// ----------------------------------------------------------------------------\n// Export account\n\nexport const ExportAccountRequestStruct = object({\n  ...CommonHeader,\n  method: literal('keyring_exportAccount'),\n  params: object({\n    id: UuidStruct,\n  }),\n});\n\nexport type ExportAccountRequest = Infer<typeof ExportAccountRequestStruct>;\n\nexport const ExportAccountResponseStruct = KeyringAccountDataStruct;\n\nexport type ExportAccountResponse = Infer<typeof ExportAccountResponseStruct>;\n\n// ----------------------------------------------------------------------------\n// List requests\n\nexport const ListRequestsRequestStruct = object({\n  ...CommonHeader,\n  method: literal('keyring_listRequests'),\n});\n\nexport type ListRequestsRequest = Infer<typeof ListRequestsRequestStruct>;\n\nexport const ListRequestsResponseStruct = array(KeyringRequestStruct);\n\nexport type ListRequestsResponse = Infer<typeof ListRequestsResponseStruct>;\n\n// ----------------------------------------------------------------------------\n// Get request\n\nexport const GetRequestRequestStruct = object({\n  ...CommonHeader,\n  method: literal('keyring_getRequest'),\n  params: object({\n    id: UuidStruct,\n  }),\n});\n\nexport type GetRequestRequest = Infer<typeof GetRequestRequestStruct>;\n\nexport const GetRequestResponseStruct = KeyringRequestStruct;\n\nexport type GetRequestResponse = Infer<typeof GetRequestResponseStruct>;\n\n// ----------------------------------------------------------------------------\n// Submit request\n\nexport const SubmitRequestRequestStruct = object({\n  ...CommonHeader,\n  method: literal('keyring_submitRequest'),\n  params: KeyringRequestStruct,\n});\n\nexport type SubmitRequestRequest = Infer<typeof SubmitRequestRequestStruct>;\n\nexport const SubmitRequestResponseStruct = KeyringResponseStruct;\n\nexport type SubmitRequestResponse = Infer<typeof SubmitRequestResponseStruct>;\n\n// ----------------------------------------------------------------------------\n// Approve request\n\nexport const ApproveRequestRequestStruct = object({\n  ...CommonHeader,\n  method: literal('keyring_approveRequest'),\n  params: object({\n    id: UuidStruct,\n    data: record(string(), JsonStruct),\n  }),\n});\n\nexport type ApproveRequestRequest = Infer<typeof ApproveRequestRequestStruct>;\n\nexport const ApproveRequestResponseStruct = literal(null);\n\nexport type ApproveRequestResponse = Infer<typeof ApproveRequestResponseStruct>;\n\n// ----------------------------------------------------------------------------\n// Reject request\n\nexport const RejectRequestRequestStruct = object({\n  ...CommonHeader,\n  method: literal('keyring_rejectRequest'),\n  params: object({\n    id: UuidStruct,\n  }),\n});\n\nexport type RejectRequestRequest = Infer<typeof RejectRequestRequestStruct>;\n\nexport const RejectRequestResponseStruct = literal(null);\n\nexport type RejectRequestResponse = Infer<typeof RejectRequestResponseStruct>;\n"]}